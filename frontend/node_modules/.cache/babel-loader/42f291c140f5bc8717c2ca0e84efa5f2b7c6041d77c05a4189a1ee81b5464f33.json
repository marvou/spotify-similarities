{"ast":null,"code":"var _jsxFileName = \"/Users/marvinamuzu/Code/spotify/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, FormGroup, Label, Input, Button, Card, CardTitle, CardText } from 'reactstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [trackName, setTrackName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [similarTracks, setSimilarTracks] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/similar-tracks', {\n        track_name: trackName,\n        artist_name: artistName\n      });\n      setSimilarTracks(response.data);\n    } catch (error) {\n      console.error('Error fetching similar tracks:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5 text-center\",\n        children: \"Find Similar Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"trackName\",\n            children: \"Track Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"trackName\",\n            value: trackName,\n            onChange: e => setTrackName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"artistName\",\n            children: \"Artist Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"artistName\",\n            value: artistName,\n            onChange: e => setArtistName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          type: \"submit\",\n          children: \"Find Similar Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"similar-tracks mt-5\",\n        children: similarTracks.map(track => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h3\",\n            className: \"mt-3\",\n            children: [track.name, \" by \", track.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardText, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.youtube_search_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [\"YouTube Search: \", track.name, \" by \", track.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.spotify_song_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [\"Spotify Song: \", track.name, \" by \", track.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nyDzVjLbFr9FdhXETCx+dPfdjTI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","Container","Form","FormGroup","Label","Input","Button","Card","CardTitle","CardText","jsxDEV","_jsxDEV","App","_s","trackName","setTrackName","artistName","setArtistName","similarTracks","setSimilarTracks","handleSubmit","e","preventDefault","response","post","track_name","artist_name","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","color","map","track","tag","name","artist","href","youtube_search_url","rel","spotify_song_url","_c","$RefreshReg$"],"sources":["/Users/marvinamuzu/Code/spotify/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, FormGroup, Label, Input, Button, Card, CardTitle, CardText } from 'reactstrap';\nimport './App.css';\n\nfunction App() {\n  const [trackName, setTrackName] = useState('');\n  const [artistName, setArtistName] = useState('');\n  const [similarTracks, setSimilarTracks] = useState([]);\n\n\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/similar-tracks', {\n        track_name: trackName,\n        artist_name: artistName,\n      });\n      setSimilarTracks(response.data);\n    } catch (error) {\n      console.error('Error fetching similar tracks:', error);\n    }\n  };\n\nreturn (\n    <div className=\"App\">\n      <Container>\n        <h1 className=\"my-5 text-center\">Find Similar Tracks</h1>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"trackName\">Track Name:</Label>\n            <Input\n              type=\"text\"\n              id=\"trackName\"\n              value={trackName}\n              onChange={(e) => setTrackName(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"artistName\">Artist Name:</Label>\n            <Input\n              type=\"text\"\n              id=\"artistName\"\n              value={artistName}\n              onChange={(e) => setArtistName(e.target.value)}\n            />\n          </FormGroup>\n          <Button color=\"primary\" type=\"submit\">Find Similar Tracks</Button>\n        </Form>\n        <div className=\"similar-tracks mt-5\">\n          {similarTracks.map((track) => (\n            <Card key={track.id} className=\"my-3\">\n              <CardTitle tag=\"h3\" className=\"mt-3\">{track.name} by {track.artist}</CardTitle>\n              <CardText>\n                <a href={track.youtube_search_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  YouTube Search: {track.name} by {track.artist}\n                </a>\n                <br />\n                <a href={track.spotify_song_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Spotify Song: {track.name} by {track.artist}\n                </a>\n              </CardText>\n            </Card>\n          ))}\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}